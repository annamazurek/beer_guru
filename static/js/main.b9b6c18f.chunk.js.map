{"version":3,"sources":["components/Beers.js","components/Details.js","App.js","serviceWorker.js","index.js"],"names":["Beers","state","beers","items","Array","from","length","per","page","loadBeers","url","fetch","then","res","json","setState","loadMore","document","querySelector","removeAttribute","prevState","concat","this","beersList","map","beer","to","id","className","key","src","image_url","alt","name","title","tagline","dataLength","next","hasMore","loader","scrollThreshold","Component","Details","food_pairing","similarBeers","handleClick","e","stopPropagation","props","history","push","match","params","beer_id","ibu","abv","ebc","similarBeersList","filter","similar","random3Beers","Math","floor","random","catch","err","console","error","foodPairList","food","simBeers","onClickCapture","description","App","path","component","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b9b6c18f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\n\r\nclass Beers extends Component {\r\n  state = {\r\n    beers: [],\r\n    items: Array.from({ length: 20 }),\r\n    per: 20,\r\n    page: 1,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadBeers();\r\n  }\r\n\r\n  loadBeers = () => {\r\n    const { per, page, beers } = this.state;\r\n    const url = `https://api.punkapi.com/v2/beers?page=${page}&per_page=${per}`;\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n          this.setState({\r\n            beers: [...beers, ...res],\r\n          })\r\n        })\r\n  }\r\n\r\n  loadMore = () => {\r\n    const loader = document.querySelector('.loader');\r\n    loader.removeAttribute('hidden');\r\n\r\n    this.setState(prevState => ({\r\n      items: this.state.items.concat(Array.from({ length: 20 })),\r\n      page: prevState.page + 1,\r\n    }), this.loadBeers)\r\n  }\r\n\r\n  render() {\r\n    const {beers} = this.state;\r\n    const beersList = beers.map(beer => {\r\n      return (\r\n        <Link to={'/' + beer.id}>\r\n          <li className=\"Beers-list__item\" key={ beer.id }>\r\n            <img className=\"Beers-list__img\" src={ beer.image_url } alt={'Bottle of beer: ' + beer.name} />\r\n            <h2 className=\"Beers-list__name\" title={ beer.name }>{ beer.name }</h2>\r\n            <p className=\"Beers-list__tag\" title={ beer.tagline }>{ beer.tagline }</p>\r\n          </li>\r\n        </Link>\r\n      )\r\n    })\r\n\r\n    return (\r\n        <div className=\"Beers\">\r\n          <ul className=\"Beers-list\">\r\n            <InfiniteScroll\r\n              dataLength={this.state.items.length}\r\n              next={this.loadMore}\r\n              hasMore={true}\r\n              loader={<div className=\"loader\"></div>}\r\n              scrollThreshold={.95}\r\n            >\r\n              { beersList }\r\n            </InfiniteScroll>\r\n          </ul>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Beers;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Details extends Component {\r\n  state = {\r\n    beer: {\r\n      food_pairing: []\r\n    },\r\n    similarBeers: [],\r\n  }\r\n\r\n  componentDidMount(){\r\n    let id = this.props.match.params.beer_id;\r\n    let url = `https://api.punkapi.com/v2/beers/${id}`;\r\n    \r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        this.setState({\r\n          beer: res[0]\r\n        })\r\n      })\r\n      .then(res => {\r\n        const {ibu, abv, ebc, id} = this.state.beer;\r\n\r\n        let url = `https://api.punkapi.com/v2/beers?ibu_lt=${ibu+10}&ibu_gt=${ibu-10>=0?ibu-10:1}&abv_lt=${abv+4}&abv_gt=${abv-4>=0?abv-4:1}&ebc_lt=${ebc+8}&ebc_gt=${ebc-10>=0?ebc-10:1}`\r\n    \r\n        fetch(url)\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            const similarBeersList = res.filter(similar => similar.id !== id);\r\n            let random3Beers = Array.from({length: 3}, () => similarBeersList[Math.floor(Math.random()*similarBeersList.length)]);\r\n\r\n            this.setState({\r\n              similarBeers: random3Beers\r\n            })\r\n          })\r\n          .catch(err => console.error(err))\r\n      })\r\n     \r\n  }\r\n\r\n  handleClick = (e) => {\r\n    e.stopPropagation()\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render(){\r\n    const { beer } = this.state;\r\n    const foodPair = beer.food_pairing;\r\n    const foodPairList = foodPair.map(food => {\r\n      return (\r\n        <li className=\"Details__pairing-item\"> { food }</li>\r\n      )\r\n    })\r\n\r\n    const simBeers = this.state.similarBeers.map(beer => {\r\n      return(\r\n        <Link to={'/' + beer.id}>\r\n          <div className=\"Details__similar-beer\">\r\n            <img src={beer.image_url} className=\"Details__similar-img\" alt={\"Beer: \" + beer.name}/>\r\n            <p className=\"Details__similar-name\" title={ beer.name }>{beer.name}</p>\r\n          </div>\r\n        </Link>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <div className=\"Details--background-grey\" onClickCapture={this.handleClick} id=\"popup\">\r\n        <div className=\"Details\">\r\n        \r\n          <div className=\"Details-main\">\r\n            <img className=\"Details__img\" src={ beer.image_url } alt={'Bottle of beer: ' + beer.name} />\r\n            <section>\r\n              <h3 className=\"Details__header\">{ beer.name }</h3>\r\n              <p className=\"Details__tag\">{ beer.tagline }</p>\r\n              <span className=\"Details__params\"><strong>IBU:</strong> { beer.ibu }</span>\r\n              <span className=\"Details__params\"><strong>ABV:</strong> { beer.abv }%</span>\r\n              <span className=\"Details__params\"><strong>EBC:</strong> { beer.ebc }</span>\r\n              <p className=\"Details__desc\">{ beer.description }</p>\r\n              <p className=\"Details__pairing\">Best served with:</p>\r\n              <ul className=\"Details__pairing-list\">\r\n                { foodPairList }\r\n              </ul>\r\n            </section>\r\n          </div>\r\n\r\n          <section className=\"Details__similar\">\r\n            <h4 className=\"Details__similar-header\">You might also like:</h4>\r\n              <div className=\"Details__similar-container\">\r\n                { simBeers }\r\n              </div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  } \r\n}\r\n\r\nexport default Details;","import React from 'react';\nimport Beers from './components/Beers';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Details from './components/Details';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>BEER<span className=\"App-header--grey\">GURU</span></h1>\n        </header>\n        <Route path=\"/\" component={Beers} />\n        <Route path=\"/:beer_id\" component={Details} />\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}